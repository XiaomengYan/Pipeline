Velocity10 = Vel10, Velocity10_SD = Vel10_SD,stringsAsFactors = FALSE)
join_all(Namedf, Classification, SiInfordf, by = "SN", type = "inner")
head(Classification)
join_all(Namedf, Classification, SiInfordf, type = "inner")
NameofMethod = "Benetti"
betadf <- NULL
for(i in 1:4){
for(j in c("B","V","R","I"))
{
betadf <- cbind(betadf,get(paste0("beta",i,j)))
}
}
Namedf <- data.frame(SN = NameList, beta = betadf)
NameList <- NULL
for(i in 1:NumSNe){
NameList[i] <- SNeList[[i]]$sneName
}
betadf <- NULL
for(i in 1:4){
for(j in c("B","V","R","I"))
{
betadf <- cbind(betadf,get(paste0("beta",i,j)))
}
}
Namedf <- data.frame(SN = NameList, beta = betadf)
library(plyr)
subClassinfor <- join_all(list(Namedf, Classification, SiInfordf), by = "SN", type = "inner")
dim(subClassinfor)
AnaClassinfor <- subClassinfor[!is.na(subClassinfor[,NameofMethod]),]
dim(AnaClassinfor)
Anadf <- data.frame(Type = AnaClassinfor[,NameofMethod],beta = AnaClassinfor[,2:17],stringsAsFactors = FALSE)
Anadf
dim(Anadf)
r <- lda(Type ~.,data = Anadf)
Prob.lda <- r$svd^2/sum(r$svd^2)
plda <- predict(object = r,newdata = Anadf)
dataset = data.frame(Type = Anadf[,"Type"],lda = plda$x)
?filled.contour
View(SiInfordf)
library(akima)
attach(df)
names(df)
fld <- with(df, interp(x = x, y = y, z = z))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = as.numeric(AnaClassinfor$Benetti),pch=19,cex = 0.8);
text(x,y,labels = AnaClassinfor$SN,cex = 0.4)}
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
library(akima)
attach(df)
names(df)
fld <- with(df, interp(x = x, y = y, z = z))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = as.numeric(AnaClassinfor$Benetti),pch=19,cex = 0.8);
text(x,y,labels = AnaClassinfor$SN,cex = 0.4)},
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
attach(df)
fld <- with(df, interp(x = x, y = y, z = z))
df <- data.frame(x = x, y=y, z = z)
x = dataset$lda.LD1
y = dataset$lda.LD2
z = AnaClassinfor$GradientVel
df <- data.frame(x = x, y=y, z = z)
library(akima)
attach(df)
fld <- with(df, interp(x = x, y = y, z = z))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = as.numeric(AnaClassinfor$Benetti),pch=19,cex = 0.8);
text(x,y,labels = AnaClassinfor$SN,cex = 0.4)},
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
fld <- with(df, interp(x = x, y = y, z = z))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = as.numeric(AnaClassinfor$Benetti),pch=19,cex = 0.8);
text(x,y,labels = AnaClassinfor$SN,cex = 0.5)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)_0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = as.numeric(AnaClassinfor$Benetti),pch=19,cex = 0.8);
text(x,y,labels = AnaClassinfor$SN,cex = 0.5)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = as.numeric(AnaClassinfor$Benetti),pch=19,cex = 0.8);
text(x,y,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
y
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = as.numeric(AnaClassinfor$Benetti),pch=19,cex = 0.8);
text(x,y-0.05,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = as.numeric(AnaClassinfor$Benetti),pch=19,cex = 0.8);
text(x,y-0.1,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = (as.numeric(AnaClassinfor$Benetti)+3),pch=19,cex = 0.8);
text(x,y-0.1,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = (as.numeric(AnaClassinfor$Benetti)+5),pch=19,cex = 0.8);
text(x,y-0.1,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = (as.numeric(AnaClassinfor$Benetti)+4),pch=19,cex = 0.8);
text(x,y-0.1,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = (as.numeric(AnaClassinfor$Benetti)+6),pch=19,cex = 0.8);
text(x,y-0.1,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = (as.numeric(AnaClassinfor$Benetti)+10),pch=19,cex = 0.8);
text(x,y-0.1,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = (as.numeric(AnaClassinfor$Benetti)+9),pch=19,cex = 0.8);
text(x,y-0.1,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
filled.contour(x = fld$x,
y = fld$y,
z = fld$z,
color.palette =
colorRampPalette(c("blue", "green", "yellow",
"orange", "red")),
plot.axes = {points(x,y,col = (as.numeric(AnaClassinfor$Benetti)+7),pch=19,cex = 0.8);
text(x,y-0.1,labels = AnaClassinfor$SN,cex = 0.45)},
xlim = c(min(x)-0.3,max(x)+0.3),
ylim = c(min(y)-0.2,max(y)+0.2),
xlab = "LD1",
ylab = "LD2",
key.title = title(main = "gradient",
cex.main = 1))
?plot3d
??plot3d
plot3d(x,y,z)
library(rgl)
plot3d(x,y,z)
plot3d(x,y,z,col = (as.numeric(AnaClassinfor$Benetti)+7))
plot3d(x,y,z,col = as.numeric(AnaClassinfor$Benetti))
plot3d(x,y,z,col = as.numeric(AnaClassinfor$Benetti),xlab = "LD1",ylab = "LD2", zlab = "gradient")
surface3d(x,y,z)
plot3d(x,y,z,col = as.numeric(AnaClassinfor$Benetti),xlab = "LD1",ylab = "LD2", zlab = "gradient")
surface3d(x,y,z)
plot3d(x,y,z,col = as.numeric(AnaClassinfor$Benetti),xlab = "LD1",ylab = "LD2", zlab = "gradient")
text(x,y,z,labels = AnaClassinfor$SN)
plot3d(x,y,z,col = as.numeric(AnaClassinfor$Benetti),xlab = "LD1",ylab = "LD2", zlab = "gradient")
text(x,y,z,labels = AnaClassinfor$SN)
length(NameList)
heapList[[117]]$plotObs("")
fittedList$fittedList[[117]]$plotFit("","")
all <- list.files("/Users/yanxiaomeng/Dropbox/project/superncore/data/kCorrected/")
length(all)
rawpath <- "/Users/yanxiaomeng/Dropbox/project/snoopy/pipeline/Data/ThirdReleaseData/DR3/"
outpath <<- "/Users/yanxiaomeng/Dropbox/project/snoopy/pipeline/Data/ThirdReleaseData/FormateBVRI/"
setwd("~/Dropbox/project/snoopy/pipeline")
rawfile <- list.files(rawpath)
length(rawfile)
NameList
SiInfor
AnaClassinfor
NameList
i=1
inputname <- paste0(rawpath,rawfile[i])
inputfile_raw <- readLines(inputname)
inputfile_all <- gsub("#","",inputfile_raw)
Nlines = length(inputfile_all)-5
inputfile_all
inputname <- paste0(rawpath,rawfile[i])
inputfile_raw <- readLines(inputname)
inputfile_raw
i=1
inputname <- paste0(rawpath,rawfile[i])
inputfile_raw <- readLines(inputname)
inputfile_raw
grep("filter",inputfile_raw)
Locfilter <- grep("filter B",inputfile_raw)
Locfilter
Filtername <- c("B","V","r","i")
Locfilter <- grep("filter",inputfile_raw)
Locfilter
Locfilter <- grep("filter",inputfile_raw)
Locfilter
lrnh
length(Locfilter)
j=1
Locfilter[j]
inputfile_raw[Locfilter[j]]
strsplit(FilterName," ")
FilterName <- inputfile_raw[Locfilter[j]]
strsplit(FilterName," ")
unlist(strsplit(FilterName," "))
Locfilter <- grep("filter B",inputfile_raw)
Locfilter
Locfilter <- grep("filter",inputfile_raw)
which(inputfile_raw[Locfilter]=="filter B")
inputfile_raw[Locfilter]=="filter B"
inputfile_raw[Locfilter[ExactFilterLoc]:Locfilter[ExactFilterLoc+1]]
ExactFilterLoc <- which(inputfile_raw[Locfilter]=="filter B")
inputfile_raw[Locfilter[ExactFilterLoc]:Locfilter[ExactFilterLoc+1]]
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:(Locfilter[ExactFilterLoc+1]-1)]
ExactFilterReponse
setwd("~/Dropbox/project/snoopy/pipeline/Code")
write.table(ExactFilterLoc,file = "tmp.txt")
write.table(ExactFilterReponse,file = "tmp.txt")
write.table(ExactFilterReponse,file = "tmp.txt",row.names = FALSE,quote = FALSE)
write.table(ExactFilterReponse,file = "tmp.txt",row.names = FALSE,quote = FALSE)
write.table(ExactFilterReponse,file = "tmp.txt",row.names = FALSE,quote = FALSE)
write.table(ExactFilterReponse,file = "tmp.txt",row.names = FALSE,quote = FALSE,col.names = FALSE)
Locfilter[end]
which(inputfile_raw[Locfilter]=="filter B")
ExactFilterLoc <- which(inputfile_raw[Locfilter]=="filter V0")
ExactFilterLoc
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:length(inputfile_raw)]
ExactFilterReponse
which(inputfile_raw[Locfilter]== "hi" )
length(6)
a <- which(inputfile_raw[Locfilter]== "hi" )
length(a)
?next
i=1
inputname <- paste0(rawpath,rawfile[i])
inputfile_raw <- readLines(inputname)
Locfilter <- grep("filter",inputfile_raw)
EntireFilterName <- c("filter B","filter V0","filter V1","filter r","filter i")
for(j in EntireFilterName){
ExactFilterLoc <- which(inputfile_raw[Locfilter]== j)
if(length(ExactFilterLoc) == 0)
{
next()
}
else if(ExactFilterLoc == length(Locfilter))
{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:length(inputfile_raw)]
}
else{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:(Locfilter[ExactFilterLoc+1]-1)]
}
write.table(ExactFilterReponse,file = "tmp.txt",row.names = FALSE,quote = FALSE,col.names = FALSE,append = TRUE)
}
i=1
inputname <- paste0(rawpath,rawfile[i])
# Read the raw data (without removing "#")
inputfile_raw <- readLines(inputname)
Locfilter <- grep("filter",inputfile_raw)
EntireFilterName <- c("filter B","filter V0","filter V1","filter r","filter i")
for(j in EntireFilterName){
ExactFilterLoc <- which(inputfile_raw[Locfilter]== j)
if(length(ExactFilterLoc) == 0)
{
next()
}
else if(ExactFilterLoc == length(Locfilter))
{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:length(inputfile_raw)]
}
else{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:(Locfilter[ExactFilterLoc+1]-1)]
}
write.table(ExactFilterReponse,file = "tmp.txt",row.names = FALSE,quote = FALSE,col.names = FALSE,append = TRUE)
}
inputfile_raw[1]
unlist(strsplit(inputfile_raw[1],split = " "))
unlist(strsplit(inputfile_raw[1],split = " "))[1]
i=1
inputname <- paste0(rawpath,rawfile[i])
inputfile_raw <- readLines(inputname)
SNname <- unlist(strsplit(inputfile_raw[1],split = " "))[1]
write.table(inputfile_raw[1],file = paste0(outpath,SNname,"_CSP_main.txt"))
write.table(inputfile_raw[1],file = paste0(outpath,SNname,"_CSP_main.txt"),quote = FALSE,row.names = FALSE,col.names = FALSE)
i=1
inputname <- paste0(rawpath,rawfile[i])
# Read the raw data (without removing "#")
inputfile_raw <- readLines(inputname)
SNname <- unlist(strsplit(inputfile_raw[1],split = " "))[1]
write.table(inputfile_raw[1],file = paste0(outpath,SNname,"_CSP_main.txt"),quote = FALSE,row.names = FALSE,col.names = FALSE)
Locfilter <- grep("filter",inputfile_raw)
EntireFilterName <- c("filter B","filter V0","filter V1","filter r","filter i")
for(j in EntireFilterName){
ExactFilterLoc <- which(inputfile_raw[Locfilter]== j)
if(length(ExactFilterLoc) == 0)
{
next()
}
else if(ExactFilterLoc == length(Locfilter))
{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:length(inputfile_raw)]
}
else{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:(Locfilter[ExactFilterLoc+1]-1)]
}
write.table(ExactFilterReponse,file = "tmp.txt",row.names = FALSE,quote = FALSE,col.names = FALSE,append = TRUE)
}
i=1
inputname <- paste0(rawpath,rawfile[i])
# Read the raw data (without removing "#")
inputfile_raw <- readLines(inputname)
SNname <- unlist(strsplit(inputfile_raw[1],split = " "))[1]
write.table(inputfile_raw[1],file = paste0(outpath,SNname,"_CSP_main.txt"),quote = FALSE,row.names = FALSE,col.names = FALSE)
Locfilter <- grep("filter",inputfile_raw)
EntireFilterName <- c("filter B","filter V0","filter V1","filter r","filter i")
for(j in EntireFilterName){
ExactFilterLoc <- which(inputfile_raw[Locfilter]== j)
if(length(ExactFilterLoc) == 0)
{
next()
}
else if(ExactFilterLoc == length(Locfilter))
{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:length(inputfile_raw)]
}
else{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:(Locfilter[ExactFilterLoc+1]-1)]
}
write.table(ExactFilterReponse,file = paste0(outpath,SNname,"_CSP_main.txt"),row.names = FALSE,quote = FALSE,col.names = FALSE,append = TRUE)
}
options(digits=10)
for(i in 1:length(rawfile)){
print(i)
inputname <- paste0(rawpath,rawfile[i])
# Read the raw data (without removing "#")
inputfile_raw <- readLines(inputname)
SNname <- unlist(strsplit(inputfile_raw[1],split = " "))[1]
write.table(inputfile_raw[1],file = paste0(outpath,SNname,"_CSP_main.txt"),quote = FALSE,row.names = FALSE,col.names = FALSE)
Locfilter <- grep("filter",inputfile_raw)
EntireFilterName <- c("filter B","filter V0","filter V1","filter r","filter i")
for(j in EntireFilterName){
ExactFilterLoc <- which(inputfile_raw[Locfilter]== j)
if(length(ExactFilterLoc) == 0)
{
next()
}
else if(ExactFilterLoc == length(Locfilter))
{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:length(inputfile_raw)]
}
else{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:(Locfilter[ExactFilterLoc+1]-1)]
}
write.table(ExactFilterReponse,file = paste0(outpath,SNname,"_CSP_main.txt"),row.names = FALSE,quote = FALSE,col.names = FALSE,append = TRUE)
}
}
for(i in 1:length(rawfile)){
print(i)
inputname <- paste0(rawpath,rawfile[i])
# Read the raw data (without removing "#")
inputfile_raw <- readLines(inputname)
SNname <- unlist(strsplit(inputfile_raw[1],split = " "))[1]
write.table(inputfile_raw[1],file = paste0(outpath,SNname,"_CSP_main.txt"),quote = FALSE,row.names = FALSE,col.names = FALSE)
Locfilter <- grep("filter",inputfile_raw)
EntireFilterName <- c("filter B","filter V0","filter V1","filter V","filter r","filter i")
for(j in EntireFilterName){
ExactFilterLoc <- which(inputfile_raw[Locfilter]== j)
if(length(ExactFilterLoc) == 0)
{
next()
}
else if(ExactFilterLoc == length(Locfilter))
{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:length(inputfile_raw)]
}
else{
ExactFilterReponse <- inputfile_raw[Locfilter[ExactFilterLoc]:(Locfilter[ExactFilterLoc+1]-1)]
}
write.table(ExactFilterReponse,file = paste0(outpath,SNname,"_CSP_main.txt"),row.names = FALSE,quote = FALSE,col.names = FALSE,append = TRUE)
}
}
setwd("~/Dropbox/project/snoopy/pipeline")
dataselectionPath <- "/Users/yanxiaomeng/Dropbox/project/snoopy/pipeline/Data/ThirdReleaseData/FormateBVRI/"
dataselectionFile <- list.files(dataselectionPath)
setwd(dataselectionPath)
SNe <- rep(0,length(dataselectionFile))
Zcmb <- rep(0,length(dataselectionFile))
for(FileI in 1:length(dataselectionFile)){
infor <- readLines(dataselectionFile[FileI])[1]
SNe[FileI] <- strsplit(infor,split = " ")[[1]][1]
Zcmb[FileI] <- as.numeric(strsplit(infor,split = " ")[[1]][2])
}
length(Zcmb)
write.csv(redshiftdf,file = "/Users/yanxiaomeng/Dropbox/project/snoopy/pipeline/Data/Redshift.csv",row.names = FALSE)
redshiftdf = data.frame(SNe = SNe,Zcmb = Zcmb)
write.csv(redshiftdf,file = "/Users/yanxiaomeng/Dropbox/project/snoopy/pipeline/Data/Redshift.csv",row.names = FALSE)
